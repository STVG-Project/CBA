// <auto-generated />
using System;
using CBA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CBA.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230323045104_database-v2.0.1")]
    partial class databasev201
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CBA.Models.SqlAgeLevel", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("des")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("high")
                        .HasColumnType("integer");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("low")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("tb_age");
                });

            modelBuilder.Entity("CBA.Models.SqlDevice", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("des")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("tb_device");
                });

            modelBuilder.Entity("CBA.Models.SqlFace", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("deviceID")
                        .HasColumnType("bigint");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<long?>("personID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("deviceID");

                    b.HasIndex("personID");

                    b.ToTable("tb_face");
                });

            modelBuilder.Entity("CBA.Models.SqlFile", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.ToTable("tb_file");
                });

            modelBuilder.Entity("CBA.Models.SqlGroup", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("des")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("tb_group");
                });

            modelBuilder.Entity("CBA.Models.SqlLogPerson", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<long?>("deviceID")
                        .HasColumnType("bigint");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("personID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("deviceID");

                    b.HasIndex("personID");

                    b.ToTable("tb_logPerson");
                });

            modelBuilder.Entity("CBA.Models.SqlPerson", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<int>("age")
                        .HasColumnType("integer");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("codeSystem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("des")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("groupID")
                        .HasColumnType("bigint");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("lastestTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("levelID")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("groupID");

                    b.HasIndex("levelID");

                    b.ToTable("tb_person");
                });

            modelBuilder.Entity("CBA.Models.SqlRole", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("des")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("tb_role");
                });

            modelBuilder.Entity("CBA.Models.SqlUser", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ID"));

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("des")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("displayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("roleID")
                        .HasColumnType("bigint");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("roleID");

                    b.ToTable("tb_user");
                });

            modelBuilder.Entity("CBA.Models.SqlFace", b =>
                {
                    b.HasOne("CBA.Models.SqlDevice", "device")
                        .WithMany()
                        .HasForeignKey("deviceID");

                    b.HasOne("CBA.Models.SqlPerson", "person")
                        .WithMany("faces")
                        .HasForeignKey("personID");

                    b.Navigation("device");

                    b.Navigation("person");
                });

            modelBuilder.Entity("CBA.Models.SqlLogPerson", b =>
                {
                    b.HasOne("CBA.Models.SqlDevice", "device")
                        .WithMany()
                        .HasForeignKey("deviceID");

                    b.HasOne("CBA.Models.SqlPerson", "person")
                        .WithMany()
                        .HasForeignKey("personID");

                    b.Navigation("device");

                    b.Navigation("person");
                });

            modelBuilder.Entity("CBA.Models.SqlPerson", b =>
                {
                    b.HasOne("CBA.Models.SqlGroup", "group")
                        .WithMany("persons")
                        .HasForeignKey("groupID");

                    b.HasOne("CBA.Models.SqlAgeLevel", "level")
                        .WithMany()
                        .HasForeignKey("levelID");

                    b.Navigation("group");

                    b.Navigation("level");
                });

            modelBuilder.Entity("CBA.Models.SqlUser", b =>
                {
                    b.HasOne("CBA.Models.SqlRole", "role")
                        .WithMany()
                        .HasForeignKey("roleID");

                    b.Navigation("role");
                });

            modelBuilder.Entity("CBA.Models.SqlGroup", b =>
                {
                    b.Navigation("persons");
                });

            modelBuilder.Entity("CBA.Models.SqlPerson", b =>
                {
                    b.Navigation("faces");
                });
#pragma warning restore 612, 618
        }
    }
}
